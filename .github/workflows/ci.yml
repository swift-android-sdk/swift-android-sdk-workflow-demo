name: sdk-install-demo ci
on:
  push:
    branches: [ main ]
  workflow_dispatch:
  pull_request:
jobs:
  install-sdk:
    strategy:
      matrix:
        include:
          #- name: 'macOS 26'
          #  os: 'macos-26'
          #  ANDROID_API: 28
          #  EMULATOR_ARCH: 'arm64-v8a'
          #  EMULATOR_GPU: 'swiftshader_indirect'

          #- name: 'macOS 15'
          #  os: 'macos-15'
          #  ANDROID_API: 28
          #  EMULATOR_ARCH: 'arm64-v8a'
          #  EMULATOR_GPU: 'swiftshader_indirect'

          #- name: 'macOS 14'
          #  os: 'macos-14'
          #  ANDROID_API: 28
          #  EMULATOR_ARCH: 'arm64-v8a'
          #  EMULATOR_GPU: 'swiftshader_indirect'

          - name: 'macOS 15 Intel API 28'
            os: 'macos-15-intel'
            ANDROID_API: 28
            EMULATOR_ARCH: 'x86_64'
            EMULATOR_GPU: 'swiftshader_indirect'

          - name: 'Ubuntu Latest API 28'
            os: 'ubuntu-latest'
            ANDROID_API: 28
            EMULATOR_ARCH: 'x86_64'
            EMULATOR_GPU: 'swiftshader_indirect'

          - name: 'Ubuntu Latest API 35'
            os: 'ubuntu-latest'
            ANDROID_API: 35
            EMULATOR_ARCH: 'x86_64'
            EMULATOR_GPU: 'swiftshader_indirect'

      fail-fast: false
    runs-on: ${{ matrix.os }}
    env:
      ANDROID_API: ${{ matrix.ANDROID_API }}
      EMULATOR_ARCH: ${{ matrix.EMULATOR_ARCH }}
      EMULATOR_GPU: ${{ matrix.EMULATOR_GPU }}
      EMULATOR_ENGINE: ${{ matrix.EMULATOR_ENGINE }}
      ANDROID_TARGET: 'default'
      #ANDROID_BUILD_TOOLS_VERSION: 36.0.0
      ANDROID_BUILD_TOOLS_VERSION: 'latest'
      ANDROID_EMULATOR_NAME: 'demo'
      ANDROID_PROFILE: "Nexus 10"
      ANDROID_CHANNEL: "3"
      BUILD_TOOLS_VERSION: "35.0.0"
    steps:
      - uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r27d

      - name: "Setup Environment"
        run: |
          echo "$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/emulator:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools:$ANDROID_HOME/build-tools/${{ env.ANDROID_BUILD_TOOLS_VERSION }}" >> $GITHUB_PATH
          echo "ANDROID_NDK_HOME=${{ steps.setup-ndk.outputs.ndk-path }}" >> $GITHUB_ENV
          # needed for Linux or else the emulator will be created in
          # ~/.android/avd but it will be sought in ~/.config/.android/avd
          if [[ "${RUNNER_OS}" == "Linux" ]]; then
            echo "ANDROID_AVD_HOME=${XDG_CONFIG_HOME}/.android/avd" >> $GITHUB_ENV
          fi

      # swiftly install instructions from https://www.swift.org/install/linux/
      - name: "Install Swiftly"
        run: |
          if [[ "${RUNNER_OS}" == "macOS" ]]; then
            curl -O https://download.swift.org/swiftly/darwin/swiftly.pkg && \
            installer -pkg swiftly.pkg -target CurrentUserHomeDirectory && \
            ~/.swiftly/bin/swiftly init --quiet-shell-followup && \
            . "${SWIFTLY_HOME_DIR:-$HOME/.swiftly}/env.sh" && \
            hash -r
          elif [[ "${RUNNER_OS}" == "Linux" ]]; then
            curl -O https://download.swift.org/swiftly/linux/swiftly-$(uname -m).tar.gz && \
            tar zxf swiftly-$(uname -m).tar.gz && \
            ./swiftly init --quiet-shell-followup && \
            . "${SWIFTLY_HOME_DIR:-$HOME/.local/share/swiftly}/env.sh" && \
            hash -r
          else
            echo "Error: unsupported OS: ${RUNNER_OS}"
            exit 1
          fi
          echo "${SWIFTLY_BIN_DIR}" >> "${GITHUB_PATH}"

      - name: "Install Swift Host Toolchain"
        run: swiftly install main-snapshot-2025-10-16

      - name: "Install Swift SDK for Android"
        run: swift sdk install https://download.swift.org/development/android-sdk/swift-DEVELOPMENT-SNAPSHOT-2025-10-16-a/swift-DEVELOPMENT-SNAPSHOT-2025-10-16-a_android-0.1.artifactbundle.tar.gz --checksum 451844c232cf1fa02c52431084ed3dc27a42d103635c6fa71bae8d66adba2500

      - name: "List Swift SDKs"
        run: swift sdk list

      - name: "Setup Swift SDK for Android"
        run: |
          cd ~/Library/org.swift.swiftpm || cd ${XDG_CONFIG_HOME:-$HOME}/.swiftpm
          ./swift-sdks/swift-DEVELOPMENT-SNAPSHOT-2025-10-16-a-android-0.1.artifactbundle/swift-android/scripts/setup-android-sdk.sh

      - name: "Build Swift Executable for Android"
        run: |
          mkdir hello
          cd hello
          swiftly run swift package init --type executable
          swiftly run swift build --swift-sdk x86_64-unknown-linux-android${ANDROID_API} --static-swift-stdlib

      - name: Free Disk Space
        if: runner.os == 'Linux'
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"

      - name: Enable KVM
        if: runner.os == 'Linux'
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Android SDKs - setup environment
        run: yes y | sdkmanager --licenses

      - name: Android SKDs - setup build tools
        run: sdkmanager --install "build-tools;${BUILD_TOOLS_VERSION}" platform-tools "platforms;android-${ANDROID_API}" --channel="${ANDROID_CHANNEL}"

      - name: Android SKDs - setup emulator
        run: sdkmanager --install emulator --channel="${ANDROID_CHANNEL}"

      - name: Android Emulator - download required images
        run: sdkmanager --install "system-images;android-${ANDROID_API};${ANDROID_TARGET};${EMULATOR_ARCH}" --channel="${ANDROID_CHANNEL}"

      - name: Android Emulator - Create
        run: avdmanager --verbose create avd --force -n "${ANDROID_EMULATOR_NAME}" --device "${ANDROID_PROFILE}" --abi "${ANDROID_TARGET}/${EMULATOR_ARCH}" --package "system-images;android-${ANDROID_API};${ANDROID_TARGET};${EMULATOR_ARCH}" --sdcard 512M

      #- name: Android - Find AVDs
      #  run: find ~/ -type d -name '*.avd'

      #- name: Android - List AVDs
      #  run: emulator -list-avds

      - name: Android - Boot
        run: nohup emulator -memory 4096 -avd "${ANDROID_EMULATOR_NAME}" -wipe-data -no-window -accel off -no-accel -gpu "${EMULATOR_GPU}" -no-snapshot -noaudio -no-boot-anim &

      - name: ADB Wait For Device
        run: adb wait-for-any-device
        timeout-minutes: 5

      - name: Pause briefly
        run: sleep 30

      #- name: ADB Press Power Button
      #  run: adb shell input keyevent 82

      - name: Check Android Emulator
        run: |
          adb shell 'echo Hello Android!'

      - name: Push Swift Exeutable to Android Emulator
        run: |
          adb push .debug/hello /data/local/tmp
          adb push $ANDROID_NDK_HOME/toolchains/llvm/prebuilt/*/sysroot/usr/lib/aarch64-linux-android/libc++_shared.so /data/local/tmp/

      - name: Run Swift Exeutable on Android Emulator
        run: |
          adb shell /data/local/tmp/hello

